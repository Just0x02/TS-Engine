{
	"compilerOptions": {
	  /* Visit https://aka.ms/tsconfig to read more about this file */
  
	  /* Projects */
  
	  /* Language and Environment */
	  "target": "es6",
	  "lib": ["DOM", "DOM.Iterable", "ESNext"],
	  "module": "commonjs",
	  "experimentalDecorators": true,                   /* Enable experimental support for TC39 stage 2 draft decorators. */
	  "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */
  
	  "rootDir": "./",                                  /* Specify the root folder within your source files. */
	  "moduleResolution": "node",                       /* Specify how TypeScript looks up a file from a given module specifier. */
	  "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
	  "typeRoots": [ "./node_modules/@types" ],                                  /* Specify multiple folders that act like './node_modules/@types'. */
	  "allowJs": true,                                  /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
	  "checkJs": true,                                  /* Enable error reporting in type-checked JavaScript files. */
	  // "declaration": true,                              /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
	//   "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
	  "outDir": "./dist",                                   /* Specify an output folder for all emitted files. */
	  "resolveJsonModule": true,
	  "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
	  "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
	  "strict": true,                                      /* Enable all strict type-checking options. */
	  "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
	  "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */
	  "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
	  "strictBindCallApply": true,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
	  "strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */
	  "noImplicitThis": true,                           /* Enable error reporting when 'this' is given the type 'any'. */
	  "useUnknownInCatchVariables": true,               /* Default catch clause variables as 'unknown' instead of 'any'. */
	  "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
	  "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
	  "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
	},
	"include": [
		"./**/*"
	],
	"exclude": [
		"./dist/**/*",
		"./data/**/*"
	]
  }
  